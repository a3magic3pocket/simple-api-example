// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/lockers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "본인 소유의 Lockers 조회",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locker"
                ],
                "summary": "본인 소유의 Lockers 조회",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagSuccRetrieveLockers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "본인 소유의 Lockers 생성",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locker"
                ],
                "summary": "본인 소유의 Lockers 생성",
                "parameters": [
                    {
                        "description": "LockerInput",
                        "name": "LockerInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.LockerInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagSucc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "본인 소유의 Lockers 삭제",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locker"
                ],
                "summary": "본인 소유의 Lockers 삭제",
                "parameters": [
                    {
                        "description": "LockerInput",
                        "name": "LockerInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.LockerInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagSucc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "본인 소유의 Lockers를 한 값으로 업데이트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locker"
                ],
                "summary": "본인 소유의 Lockers를 한 값으로 업데이트",
                "parameters": [
                    {
                        "description": "UpdateLockersInput",
                        "name": "UpdateLockersInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateLockersInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagSucc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "요청 body에서 유저정보 획득",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "요청 body에서 유저정보 획득",
                "parameters": [
                    {
                        "description": "UserInfo",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "로그아웃",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "로그아웃",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagSucc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "유저 조회",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "유저 조회",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagSuccRetrieveUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            },
            "post": {
                "description": "유저 생성",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "유저 생성",
                "parameters": [
                    {
                        "description": "UserInput",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagSucc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.SwagFail"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.UserInfo": {
            "type": "object",
            "properties": {
                "Password": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "controllers.AuthTokenResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "expire": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "controllers.LockerInput": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "Location": {
                    "type": "string"
                }
            }
        },
        "controllers.LockerOutput": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "Location": {
                    "type": "string"
                }
            }
        },
        "controllers.SwagFail": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controllers.SwagSucc": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "controllers.SwagSuccRetrieveLockers": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.LockerOutput"
                    }
                }
            }
        },
        "controllers.SwagSuccRetrieveUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/controllers.UserOutput"
                }
            }
        },
        "controllers.UpdateLockersInput": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "Location": {
                    "type": "string"
                },
                "UpdateIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "controllers.UserInput": {
            "type": "object",
            "properties": {
                "Group": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "controllers.UserOutput": {
            "type": "object",
            "properties": {
                "UserName": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
